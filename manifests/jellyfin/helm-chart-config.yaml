apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
    name: jellyfin
    namespace: jellyfin
spec:
    chart: jellyfin
    repo: https://jellyfin.github.io/jellyfin-helm
    targetNamespace: jellyfin
    createNamespace: true
    valuesContent: |-
        # Service configuration - LoadBalancer with MetalLB IP
        service:
          type: LoadBalancer
          loadBalancerIP: 10.0.0.249
          port: 8096

        # Jellyfin-specific configuration
        jellyfin:
          env:
            - name: TZ
              value: "America/Toronto"
            - name: JELLYFIN_PublishedServerUrl
              value: "https://jellyfin.nourez.dev"

        # Persistence - Config via Longhorn, minimal media PVC
        persistence:
          config:
            enabled: true
            storageClass: "longhorn"
            accessMode: ReadWriteOnce
            size: 10Gi
          media:
            enabled: false

        # Resources with GPU support
        resources:
          requests:
            gpu.intel.com/i915: 1
            memory: "1Gi"
            cpu: "500m"
          limits:
            gpu.intel.com/i915: 1
            memory: "4Gi"
            cpu: "2000m"

        # Pod security context for GPU access (non-root)
        podSecurityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          supplementalGroups: [44, 993]  # 44=video for GPU, 993=jellyfin

        # Node selector for Intel GPU node
        nodeSelector:
          intel.feature.node.kubernetes.io/gpu: "true"

        # Additional volumes for GPU access and external media
        volumes:
          - name: external-media
            hostPath:
              path: /mnt/media
              type: Directory
          - name: dev-dri
            hostPath:
              path: /dev/dri
              type: Directory
          - name: transcode
            persistentVolumeClaim:
              claimName: jellyfin-transcode

        # Additional volume mounts
        volumeMounts:
          - name: external-media
            mountPath: /external-drive
            readOnly: true
          - name: dev-dri
            mountPath: /dev/dri
          - name: transcode
            mountPath: /transcode

        # Use init container to create symbolic link from host media to expected location
        extraInitContainers:
          - name: media-symlink
            image: busybox:1.36
            command: ['sh', '-c']
            args:
              - |
                # Remove the default media directory if it exists
                if [ -d "/media" ] && [ ! -L "/media" ]; then
                  rm -rf /media/*
                fi
                # Create symbolic links for each media type
                ln -sf /mnt/hostmedia/Movies /media/Movies 2>/dev/null || true
                ln -sf /mnt/hostmedia/TV /media/TV 2>/dev/null || true
                ln -sf /mnt/hostmedia/Anime /media/Anime 2>/dev/null || true
                echo "Media symlinks created successfully"
            volumeMounts:
              - name: host-media
                mountPath: /mnt/hostmedia
                readOnly: true
              - name: config
                mountPath: /config
              - name: media
                mountPath: /media
